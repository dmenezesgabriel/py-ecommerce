services:
  inventory_service:
    build:
      context: ./inventory
      dockerfile: Dockerfile.inventory
    ports:
      - "8001:8001"
    volumes:
      - ./inventory:/app
    networks:
      - ecommerce_network
    command: uvicorn inventory_service:app --host 0.0.0.0 --port 8001 --reload

  orders_service:
    build:
      context: ./orders
      dockerfile: Dockerfile.orders
    ports:
      - "8002:8002"
    volumes:
      - ./orders:/app
    networks:
      - ecommerce_network
    command: uvicorn orders_service:app --host 0.0.0.0 --port 8002 --reload

  payments_service:
    build:
      context: ./payments
      dockerfile: Dockerfile.payments
    ports:
      - "8003:8003"
    volumes:
      - ./payments:/app
    depends_on:
      - mongo
    networks:
      - ecommerce_network
    command: uvicorn payments_service:app --host 0.0.0.0 --port 8003 --reload

  delivery_service:
    build:
      context: ./delivery
      dockerfile: Dockerfile.delivery
    ports:
      - "8004:8004"
    volumes:
      - ./delivery:/app
    networks:
      - ecommerce_network
    command: uvicorn delivery_service:app --host 0.0.0.0 --port 8004 --reload

  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME:-postgres}
    image: postgres:16.0-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_ecommerce:/var/lib/postgresql/data
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - ecommerce_network

  mongo:
    image: mongo:8.0.0-rc11-jammy
    hostname: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo_ecommerce:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
    networks:
      - ecommerce_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./conf/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./conf/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    networks:
      - ecommerce_network

networks:
  ecommerce_network:
    driver: bridge

volumes:
  postgres_ecommerce:
  mongo_ecommerce:
